(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{79:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return s})),r.d(t,"rightToc",(function(){return c})),r.d(t,"default",(function(){return p}));var n=r(2),o=r(6),a=(r(0),r(99)),i={slug:"monitoring-processes-on-raspberry-pi",title:"Monitoring processes on Raspberry PI remotely with Runlet and htop",author:"Vandr\xe9 Leal C\xe2ndido",author_title:"Core Maintainer",author_url:"https://github.com/vandreleal",author_image_url:"https://avatars0.githubusercontent.com/u/9258892?s=460&u=7e0b51687eb19ea943975cb29428627e255e0fb9&v=4",tags:["Runlet","Tutorial","Raspberry Pi"]},s={permalink:"/detail/blog/monitoring-processes-on-raspberry-pi",editUrl:"https://github.com/Flywith24/detail/edit/master/blog/2020-04-01-monitoring-processes-on-raspberry-pi.md",source:"@site/blog\\2020-04-01-monitoring-processes-on-raspberry-pi.md",description:"htop is an interactive text-mode process viewer for Unix systems that is highly configurable and gives the option to view information such as CPU load, memory consumption, hostname, tasks, load averages, and uptime. It can be used alongside Runlet to monitor Raspberry PI processes remotely.",date:"2020-04-01T00:00:00.000Z",tags:[{label:"Runlet",permalink:"/detail/blog/tags/runlet"},{label:"Tutorial",permalink:"/detail/blog/tags/tutorial"},{label:"Raspberry Pi",permalink:"/detail/blog/tags/raspberry-pi"}],title:"Monitoring processes on Raspberry PI remotely with Runlet and htop",readingTime:1.48,truncated:!0,nextItem:{title:"Creating a backup system with Runlet",permalink:"/detail/blog/creating-backup-system"}},c=[],l={rightToc:c};function p(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://hisham.hm/htop/"}),"htop")," is an interactive text-mode process viewer for Unix systems that is highly configurable and gives the option to view information such as CPU load, memory consumption, hostname, tasks, load averages, and uptime. It can be used alongside Runlet to monitor Raspberry PI processes remotely."))}p.isMDXComponent=!0},99:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return d}));var n=r(0),o=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=o.a.createContext({}),p=function(e){var t=o.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(r),b=n,d=u["".concat(i,".").concat(b)]||u[b]||m[b]||a;return r?o.a.createElement(d,s(s({ref:t},l),{},{components:r})):o.a.createElement(d,s({ref:t},l))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"}}]);