(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{72:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return p}));var i=t(2),r=t(6),o=(t(0),t(99)),a={id:"definition",title:"Definition",sidebar_label:"Definition"},l={unversionedId:"job/definition",id:"job/definition",isDocsHomePage:!1,title:"Definition",description:"We use the YAML data-serialization language to configure jobs in Runlet. The job syntax block is relatively simple, and you can define a job in two ways:",source:"@site/docs\\job\\definition.md",slug:"/job/definition",permalink:"/detail/docs/job/definition",editUrl:"https://github.com/Flywith24/detail/edit/master/docs/job/definition.md",version:"current",sidebar_label:"Definition",sidebar:"docs",previous:{title:"@signout",permalink:"/detail/docs/tools/signout"},next:{title:"Device Assignment",permalink:"/detail/docs/job/device_assignment"}},c=[{value:"Multi-line job script",id:"multi-line-job-script",children:[]},{value:"Description (optional)",id:"description-optional",children:[]},{value:"Change current directory (optional)",id:"change-current-directory-optional",children:[]},{value:"Change the job entrypoint (optional)",id:"change-the-job-entrypoint-optional",children:[]}],s={rightToc:c};function p(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(i.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"We use the YAML data-serialization language to configure jobs in Runlet. The job syntax block is relatively simple, and you can define a job in two ways:"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Reduced syntax:")),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-shell"}),"myjob: ls -lah\n")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Extended syntax:")),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-shell"}),"myjob:\n    script: ls -lah\n")),Object(o.b)("h3",{id:"multi-line-job-script"},"Multi-line job script"),Object(o.b)("p",null,"You can define jobs with a long multi-line string as follows:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-shell"}),'myjob:\n    script: |\n        ls -lah\n        echo "Job has finished"\n\nmyjob2: |\n    ls -lah\n    echo "Job 2 has finished"\n')),Object(o.b)("h3",{id:"description-optional"},"Description (optional)"),Object(o.b)("p",null,"You can define a description for a job as follows:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-shell"}),'myjob:\n    script: "ls -lah"\n    description: "This job shows all the content of the current folder"\n')),Object(o.b)("h3",{id:"change-current-directory-optional"},"Change current directory (optional)"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-shell"}),'myjob:\n    script: ls -lah\n    cwd: "/home/user/.config"\n')),Object(o.b)("h3",{id:"change-the-job-entrypoint-optional"},"Change the job entrypoint (optional)"),Object(o.b)("p",null,"By default, jobs are executed using ",Object(o.b)("inlineCode",{parentName:"p"},"/bin/bash")," on Linux and MacOS and ",Object(o.b)("inlineCode",{parentName:"p"},"cmd.exe")," on Windows. You can change this behavior by using the ",Object(o.b)("inlineCode",{parentName:"p"},"entrypoint")," key."),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-shell"}),'myjob:\n    script: |\n        import time\n        for i in range(3600):\n            print(i)\n            time.sleep(1)\n    entrypoint: [ "python" ]\n')),Object(o.b)("p",null,"It requires a list of strings denoting the used binary and a list of args. Runlet will wrap the contents of ",Object(o.b)("inlineCode",{parentName:"p"},"script")," in a file and pass to the ",Object(o.b)("inlineCode",{parentName:"p"},"entrypoint")," execute."))}p.isMDXComponent=!0},99:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return j}));var i=t(0),r=t.n(i);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=r.a.createContext({}),p=function(e){var n=r.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},b=function(e){var n=p(e.components);return r.a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=r.a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),b=p(t),d=i,j=b["".concat(a,".").concat(d)]||b[d]||u[d]||o;return t?r.a.createElement(j,l(l({ref:n},s),{},{components:t})):r.a.createElement(j,l({ref:n},s))}));function j(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=t[s];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);